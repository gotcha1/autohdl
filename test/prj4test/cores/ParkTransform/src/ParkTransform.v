 //****************Модуль расчета прямых преобразований Кларка и Парка для трехфазной электрической машины****************
//Модуль выполняет последовательно прямые преобразования Кларка и Парка для трехфазной электрической машины
//Для работы модуля требуется умножитель mult16 или аналогичный аппаратный умножитель двух чисел (16-бит, знаковое 
//с фиксированной точкой, 0-бит целой части, 15 бит дробной части)
//
//Входы:
//	rst		- Асинхронный сброс
//	clk		- Тактовый генератор
//	start	- Строб начала расчета
//	ia		- Ток фазы a (16-бит знаковое)
//	ib		- Ток фазы b (16-бит знаковое)
//	sin		- Синус угла вектора магнитной индукции поля ротора, относительно поля статора 
//			  (16-бит знаковое, с фикс. точкой 0-бит целой части, 15 бит дробной части)
//	cos		- Косинус угла вектора магнитной индукции поля ротора, относительно поля статора 
//			  (16-бит знаковое, с фикс. точкой 0-бит целой части, 15 бит дробной части)
//	mulc	- Вход с внешнего умножителя mult16 
//
//Выходы:
//	mula	- Выход на внешний умножитель mult16
//	mulb	- Выход на внешний умножитель mult16   
//  mul_busy- Флаг того, что умножитель занят
//	i_a		- Координата альфа в преобразовании кларка (16-бит знаковое)
//	i_b		- Координата бета  в преобразовании кларка (16-бит знаковое)
//	id		- Координата d вектора тока в преобразовании Парка (16-бит знаковое)
//	iq		- Координата q вектора тока в преобразовании Парка (16-бит знаковое)
//	rdy		- Флаг окончания вычислений
//
//Автор: Романов А.М.
//		 Кафедра "Проблем управления" МИРЭА(ТУ) 2009 г.
//***********************************************************************************************************************

module ParkTransform(
	input  rst,                  //Асинхронный сброс
	input  clk,					 //Тактовый генерато
	input  start,				 //Строб начала расчета
	input  [15:0]ia,			 //Ток фазы a
	input  [15:0]ib,			 //Ток фазы b
	input  [15:0]sin,			 //Синус угла вектора магнитной индукции поля ротора, относительно поля статора
	input  [15:0]cos,			 //Косинус угла вектора магнитной индукции поля ротора, относительно поля статора
	output reg [15:0]mula,		 //Выход на внешний умножитель mult16
	output reg [15:0]mulb,		 //Выход на внешний умножитель mult16
	input  [15:0]mulc,			 //Вход с внешнего умножителя mult16
	output mul_busy,			 //Флаг того, что умножитель занят
	output reg [15:0]id,		 //Координата d вектора тока в преобразовании Парка
	output reg [15:0]iq,         //Координата q вектора тока в преобразовании Парка
	output reg [15:0]i_a,		 //Координата альфа в преобразовании Кларка
	output reg [15:0]i_b,        //Координата бета в преобразовании Кларка
	output reg rdy);             //Флаг окончания вычислений
	

//typedef enum logic[7:0] {
parameter
	st_idle			= 8'b0000001,
	st_mul_ib		= 8'b0000010,
	st_mul_ia		= 8'b0000100,
	st_mulacs		= 8'b0001000,
	st_mulasn		= 8'b0010000,
	st_mulbsn		= 8'b0100000,
	st_mulbcs		= 8'b1000000;
//	} CPState;					 
	
	reg [7:0]/*CPState*/ state;		
	
reg [15:0]s_ia;
reg	[15:0]i_beta;
reg [15:0]t_iq;	
reg [15:0]t_id;	

always @(posedge rst, posedge clk)
	if(rst)
		begin
			iq<=16'd0;
			id<=16'd0;	
			i_a<=16'd0;
			i_b<=16'd0;
			rdy<=1'b0;
			state<=st_idle;	 
			s_ia<=16'd0;
			i_beta<=16'd0;
			t_iq<=16'd0;
			t_id<=16'd0;	
			mula<=16'd0;
			mulb<=16'd0;
		end else
		case (state)
//**************Преобразование Кларка*********************
		st_idle:
			begin
				if(start)
					begin
						s_ia<=ia;		   //Сохраняем значения Ia на время вычислений
                        i_beta<=ib;
						mula<=ia;
						mulb<=cos;	   //Умножаем ib на 1/sqrt(3)
						state<=st_mulacs;
					end
				if(rdy) rdy<=~rdy;		   //Снимаем флаг rdy, если он стоял
			end 
//**************Преобразование Парка*********************
		st_mulacs:	
			begin		   
				t_id<=mulc;				   //Сохраняем результат умножения
				mulb<=sin;				   //Умножаем координату альфа на синус угла вектора магнитной индукции
				state<=st_mulasn;
			end
		st_mulasn:	
			begin		   
				t_iq<=mulc;				  //Сохраняем результат умножения
				mula<=i_beta;			  //Умножаем координату бета на синус угла вектора магнитной индукции
				state<=st_mulbsn;
			end
		st_mulbsn:	
			begin		   
				t_id<=t_id+mulc;		 //Вычисляем координату d вектора тока в преобразовании Парка
				mulb<=cos;				 //Умножаем координату бета на косинус угла вектора магнитной индукции
				state<=st_mulbcs;
			end
		st_mulbcs:
			begin
			 	i_a<=s_ia;
				i_b<=i_beta;
				id<=t_id;				//Выводим на выход координату d вектора тока в преобразовании Парка
				iq<=mulc-t_iq;  		//Вычисляем координату q вектора тока в преобразовании Парка и выводим ее на выход
				rdy<=1'b1;				//Выставляем флаг окончания вычислений
				state<=st_idle;
			end
		endcase	

assign mul_busy=(state!=st_idle);
		
endmodule	


  